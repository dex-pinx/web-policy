@config "../../../tailwind.config.js";
/*
    **What's in the box?**
    - input components
        - 텍스트 입력 (input, textarea): .input-box
        - 텍스트 박스 그룹: .input-group
        - 체크박스와 라디오 버튼: .checkbox, .radio
        - 스위치: .switch
        - 핀 입력: .pin-input
        - 입력 라벨링 감싸기: .input-wrap

    - button components
        - 버튼: .btn
        - 버튼 색상: .btn-primary, .btn-danger, .btn-success, .btn-warning
        - 버튼 크기: .btn-lg, .btn-md, .btn-sm, .btn-xs

    - 기타
        - 아이콘 svg 마스킹: .icon
        - 클릭 가능한 영역: .area-clickable
 */

.collapsible {
    & .item-label {
        display: flex;

        span {
            flex: 1;
        }

        & .chevron {
            width: 20px;
            height: 20px;
            transition: transform 0.15s ease;
        }
    }

    & .item-content {
        max-height: 0;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    & #filter-collapse:checked {
        & + .item-label {
            & .chevron {
                transform: rotate(180deg);
            }
        }

        & ~ .item-content {
            max-height: 500px;
            overflow: visible;
        }
    }

}

input,
textarea {
    border: 1px solid theme('colors.light.bdd');
    border-radius: 0.5rem;
    background-color: theme('colors.light.bg1');
    color: theme('colors.light.tx1');

    &::placeholder {
        color: theme('colors.light.tx4');
        opacity: 1;
    }

    &:hover {
        border-color: var(--v-secondary-darkest);
    }

    &:focus {
        border-color: theme('colors.primary.600');
        box-shadow: theme('boxShadow.sm');
    }

    &:disabled {
        cursor: not-allowed;
        background-color: theme('colors.light.bg2');
    }

}

.area-ripple {
    position: relative;
    overflow: hidden;
    display: inline-block;

    &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background-color: theme('colors.light.tx3');
        opacity: 0.75;
        transform: translate(-50%, -50%) scale(0);
    }

    &.ripple-active::before {
        animation: ripple 0.5s forwards;
    }

    @keyframes ripple {
        to {
            transform: translate(-50%, -50%) scale(1.6);
            opacity: 0;
        }
    }
}

.box-border {
    padding: 0.5rem;
    width: 100%;
    border: 1px solid theme('colors.light.bdd');
    border-radius: 0.5rem;
    background-color: theme('colors.white');
}

.checkbox,
.radio {
    position: relative;
    display: inline-flex;
    align-items: center;
    user-select: none;
    cursor: pointer;

    & input {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
        cursor: pointer;
    }

    & .control {
        position: relative;
        height: 24px;
        width: 24px;
        background-color: theme('colors.white');
        border: 2px solid theme('colors.light.bdd');
        box-shadow: theme('boxShadow.inner');
        transition: all 0.15s ease-in-out;

        &.error {
            border-color: theme('colors.danger.500');
        }

        &::after {
            content: '';
            position: absolute;
            display: none;
        }
    }

    &:hover input ~ .control {
        border-color: var(--v-primary-darkest);
        box-shadow: theme('boxShadow.sm');
    }

    &:hover input:disabled ~ .control {
        border-color: theme('colors.light.bdd');
        box-shadow: none;
    }

    & input:checked ~ .control {
        background-color: theme('colors.primary.600');
        border-color: theme('colors.primary.600');

        &::after {
            display: block;
        }
    }

    & input:disabled ~ .control {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: theme('colors.light.bg2');
        color: theme('colors.light.bdd');
    }

    & input:focus ~ .control {
        box-shadow: 0 0 0 0.25rem rgba(var(--v-primary-rgb), 0.5);
    }
}

/* Checkbox specific styles */
.checkbox {
    & .control {
        border-radius: 0.375rem; /* Tailwind rounded */

        &::after {
            --icon-url: url('../icons/Check.svg');
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: theme('colors.white');
            mask: var(--icon-url) no-repeat center;
            -webkit-mask: var(--icon-url) no-repeat center;
            mask-size: 22px 22px;
            -webkit-mask-size: 22px 22px;
        }
    }
}

/* Radio specific styles */
.radio {
    & .control {
        border-radius: 50%;

        &::after {
            top: 50%;
            left: 50%;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: white;
            transform: translate(-50%, -50%);
        }
    }
}

.input-box {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;

    input,
    textarea {
        width: 100%;
        padding: 0.75rem 1rem;
        line-height: 1.5;
        transition: all 0.15s ease;
    }

    & .prefix {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: theme('colors.light.tx4');
        width: 20px;
        height: 20px;

        & + input,
        & + textarea {
            padding-left: 44px;
        }
    }

    & .suffix {
        position: absolute;
        right: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: theme('colors.light.tx4');
        width: 20px;
        height: 20px;
    }

    & input:has(+ .suffix),
    & textarea:has(+ .suffix) {
        padding-right: 44px;
    }

    & .pointer {
        cursor: pointer;
        transition: all 0.15s ease;

        &:active {
            color: theme('colors.light.tx1');
        }

    }

    &.error {
        input,
        textarea {
            border-color: theme('colors.danger.500');
        }

        & .suffix {
            color: theme('colors.danger.500');
        }
    }
}

.pin-input {
    display: flex;
    gap: 1rem;

    & .pin-box {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;

        input {
            width: 3.5rem;
            height: 3.5rem;
            font-size: theme('fontSize.2xl');
            font-weight: 700;
            line-height: 3.5rem;
            text-align: center;
        }
    }

}

.input-wrap {
    display: flex;
    flex-direction: column;
    gap: 4px;
    width: 100%;

    /* Base label styling */

    & .label {
        font-size: theme('fontSize.sm');
        color: theme('colors.light.tx2');
        font-weight: theme('fontWeight.medium');
        pointer-events: none;

        &.error {
            color: theme('colors.danger.500');
        }
    }

    /* Label positions */

    & .label-lt {
        font-weight: 500;
        margin-bottom: 4px;
        order: -1;
    }

    & .label-lb {
        order: 1;
    }

    & .label-rt {
        order: -1;
        align-self: flex-end;
    }

    & .label-rb {
        order: 1;
        align-self: flex-end;
    }
}

.input-group {
    position: relative;
    display: flex;
    align-items: center;

    & .group-box {
        border: 1px solid theme('colors.light.bdd');
        padding: 0.75rem 1rem;

        &-left {
            border-radius: 0.5rem 0 0 0.5rem;
            border-right: none;

            & + .input-box input {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }

        &-right {
            border-radius: 0 0.5rem 0.5rem 0;
            border-left: none;
        }
    }

    &.error {
        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 0.5rem;
            border: 1px solid theme('colors.danger.500');
        }
    }


    & .input-box {
        flex: 1;
    }

    & .input-box:has(+ .group-box-right) input {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }
}

.dropdown {
    position: relative;
    display: inline-flex;
    padding: 0.75rem 1rem;
    border: 1px solid theme('colors.light.bdd');
    background-color: theme('colors.light.bg1');
    border-radius: 0.5rem;
    cursor: pointer;
    align-items: center;
    transition: all 0.3s ease;
    user-select: none;

    &.error {
        border: 1px solid theme('colors.danger.500');
    }

    &::after {
        content: '';
        --icon-url: url('../icons/ChevronL.svg');
        display: inline-block;
        mask-size: contain;
        mask-repeat: no-repeat;
        mask-position: center;
        vertical-align: top;
        background-color: currentColor;
        mask-image: var(--icon-url);
        -webkit-mask-image: var(--icon-url);
        width: 16px;
        height: 16px;
        margin-left: auto;
        transform: rotate(-90deg);
        color: theme('colors.light.tx4');
        transition: all 0.15s ease;
    }

    & ul {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        max-height: 270px;
        overflow-y: auto;
        background-color: theme('colors.light.bg1');
        border: 1px solid theme('colors.light.bdd');
        border-radius: 0.5rem;
        z-index: 10;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;

        & li {
            margin: 0.5rem;
            padding: 0.75rem 1rem;
            transition: all 0.15s ease;
            border-radius: 0.4rem;

            &:hover {
                background-color: theme('colors.light.bg2');
            }

            &:active {
                background-color: theme('colors.light.bg3');
                font-weight: bold;
            }
        }
    }

    &.open {
        border: 1px solid theme('colors.primary.600');

        &:after {
            color: theme('colors.primary.600');
            transform: rotate(90deg);
        }

        & ul {
            opacity: 1;
            visibility: visible;
            transform: translateY(1px);
        }
    }
}

.icon {
    display: inline-block;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    vertical-align: top;
    background-color: currentColor;
    mask-image: var(--icon-url);
    -webkit-mask-image: var(--icon-url);
}

.icon-square {
    display: inline-block;
    padding: 10px;
    width: 40px;
    height: 40px;
    background-color: theme('colors.light.bg2');
    color: theme('colors.light.tx1');

    & .icon {
        width: 20px;
        height: 20px;
    }
}

.badge {
    display: inline-block;
    color: theme('colors.light.tx1');
    background-color: theme('colors.light.bdd');
    padding: 0.25rem 0.5rem;
    font-size: 10px;
    font-weight: 600;
    line-height: 16px;
    border-radius: 0.25rem;
    text-align: center;
    user-select: none;

    & .icon-close {
        cursor: pointer;
        width: 16px;
        height: 16px;
        margin-left: 0.25rem;
    }

    &.badge-primary {
        color: theme('colors.white');
        background-color: theme('colors.primary.600');
    }

    &.badge-danger {
        color: theme('colors.white');
        background-color: theme('colors.danger.500');
    }

    &.badge-success {
        color: theme('colors.white');
        background-color: theme('colors.success.500');
    }

    &.badge-light {
        color: theme('colors.light.tx3');
        background-color: theme('colors.light.bg3');
    }

    &.badge-dark {
        color: theme('colors.light.bg1');
        background-color: theme('colors.light.tx2');
    }
}

.outline-box {
    padding: 0.75rem;
    width: 100%;
    border: 1px solid theme('colors.light.bdd');
    border-radius: 0.5rem;
    background-color: theme('colors.light.bg1');
}

.btn {
    display: inline-block;
    vertical-align: bottom;
    text-align: center;
    user-select: none;
    padding: .75rem 1rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 1rem;
    font-weight: 600;
    transition: all .15s ease-in-out;
    transform: translateY(0);
    /*default color*/
    color: theme('colors.light.tx1');
    background-color: var(--v-secondary);
    border: 1px solid theme('colors.light.bdd');
    box-shadow: theme('boxShadow.sm');

    &:hover {
        background-color: var(--v-secondary-darker);
        border-color: var(--v-secondary-darkest);
        box-shadow: theme('boxShadow.md');
    }

    &:active {
        background-color: theme('colors.light.bg2');
        transform: translateY(2px);
        box-shadow: theme('boxShadow.inner');
    }

    &:disabled {
        background-color: theme('colors.light.bg2');
        color: theme('colors.light.bdd');

        &:hover {
            box-shadow: none;
        }

        &:active {
            transform: none;
        }
    }


    &:focus {
        box-shadow: 0 0 0 0.25rem rgba(var(--v-secondary-rgb), 0.75);
    }

    /* Button Colors */

    &.btn-primary {
        color: theme('colors.white');
        background-color: var(--v-primary);
        border-color: var(--v-primary);

        &:hover {
            background-color: var(--v-primary-darker);
            border-color: var(--v-primary-darkest);
        }

        &:active {
            background-color: theme('colors.primary.500');
            border-color: theme('colors.primary.500');
        }

        &:disabled {
            background-color: theme('colors.primary.200');
            border-color: theme('colors.primary.200');
        }

        &:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--v-primary-rgb), 0.5);
        }
    }


    &.btn-danger {
        color: theme('colors.white');
        background-color: var(--v-danger);
        border-color: var(--v-danger);


        &:hover {
            background-color: var(--v-danger-darker);
            border-color: var(--v-danger-darkest);
        }

        &:active {
            background-color: var(--v-danger-lighter);
            border-color: var(--v-danger-lightest);
        }

        &:disabled {
            background-color: theme('colors.danger.300');
            border-color: theme('colors.danger.300');
        }

        &:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--v-danger-rgb), 0.5);
        }

    }

    &.btn-success {
        color: theme('colors.white');
        background-color: var(--v-success);
        border-color: var(--v-success);


        &:hover {
            background-color: var(--v-success-darker);
            border-color: var(--v-success-darkest);
        }

        &:active {
            background-color: var(--v-success-lighter);
            border-color: var(--v-success-lightest);
        }

        &:disabled {
            background-color: theme('colors.success.300');
            border-color: theme('colors.success.300');
        }

        &:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--v-success-rgb), 0.5);
        }


    }

    &.btn-warning {
        color: theme('colors.white');
        background-color: var(--v-warning);
        border-color: var(--v-warning);

        &:hover {
            background-color: var(--v-warning-darker);
            border-color: var(--v-warning-darkest);
        }

        &:active {
            background-color: var(--v-warning-lighter);
            border-color: var(--v-warning-lightest);
        }

        &:disabled {
            background-color: theme('colors.warning.300');
            border-color: theme('colors.warning.300');
        }

        &:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--v-warning-rgb), 0.5);
        }

    }

    &.btn-gray {
        color: theme('colors.black');
        background-color: var(--v-gray);
        border-color: var(--v-gray);

        &:hover {
            background-color: var(--v-gray-darker);
            border-color: var(--v-gray-darker);
        }

        &:active {
            background-color: var(--v-gray-lighter);
            border-color: var(--v-gray-lighter);
        }

        &:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--v-gray-rgb), 0.5);
        }
    }

    &.btn-ghost {
        color: theme('colors.light.tx1');
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;

        &:hover {
            color: theme('colors.light.tx2');
            background-color: var(--v-gray-darker);
        }

        &:active {
            color: theme('colors.light.tx1');
            background-color: var(--v-gray-lighter);
        }

        &:focus {
            box-shadow: none;
        }
    }

    /* Button Sizes */

    &.btn-lg {
        padding: .875rem 1rem;
        font-size: theme('fontSize.base');
        line-height: 1.5;
        border-radius: 1rem;
    }

    &.btn-md {
        padding: .75rem 1rem;
        font-size: theme('fontSize.base');
        line-height: 1.5;
        border-radius: 1rem;
    }

    &.btn-sm {
        padding: .625rem .875rem;
        font-size: theme('fontSize.sm');
        line-height: 16px;
        border-radius: 1rem;
    }

    &.btn-xs {
        padding: .375rem .625rem;
        font-size: theme('fontSize.sm');
        line-height: 1.25;
        border-radius: 1rem;
    }

}

.area-clickable {
    cursor: pointer;
    user-select: none;

    &:hover {
        background-color: var(--v-secondary);
        border-color: var(--v-secondary-darker);
    }

    &:active {
        background-color: var(--v-secondary-lighter);
        border-color: var(--v-secondary-lightest);
    }
}

.switch {
    --switch-width: 44px;
    --switch-height: 24px;
    --switch-padding: 2px; /* switch border width */
    --switch-color-active: theme('colors.primary.600');
    --switch-color-rgb: var(--v-primary-rgb);
    --switch-handle-size: calc(var(--switch-height) - (var(--switch-padding) * 2));
    --switch-handle-translation: calc(var(--switch-width) - var(--switch-height));

    position: relative;
    display: inline-flex;
    align-items: center;
    user-select: none;
    cursor: pointer;

    & input {
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
    }

    /* Switch track */

    & .control {
        position: relative;
        display: inline-block;
        width: var(--switch-width);
        height: var(--switch-height);
        background-color: theme('colors.light.bd3');
        border-radius: 9999px;
        transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
        overflow: hidden; /* Added to prevent handle overflow during animation */

        /* Switch handle/thumb */

        &::after {
            content: '';
            position: absolute;
            top: var(--switch-padding);
            left: var(--switch-padding);
            width: var(--switch-handle-size);
            height: var(--switch-handle-size);
            background-color: theme('colors.white');
            border-radius: 50%;
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.1);
            transform: translateX(0); /* Reset initial position */
            transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
            will-change: transform; /* Optimize animation performance */
        }
    }

    /* Hover effects */

    &:hover .control {
        background-color: var(--v-secondary-darkest);

        &::after {
            box-shadow: 0 2px 4px 0 rgb(0 0 0 / 0.1);
        }
    }

    /* Focus styles */

    & input:focus ~ .control {
        /* box-shadow: 0 0 0 2px #fff, 0 0 0 4px var(--switch-color-active); */
        box-shadow: 0 0 0 0.25rem rgba(var(--switch-color-rgb), 0.5);
    }

    /* Checked state */

    & input:checked ~ .control {
        background-color: var(--switch-color-active);

        &::after {
            transform: translateX(var(--switch-handle-translation));
        }
    }

    /* Disabled state */

    & input:disabled ~ .control {
        cursor: not-allowed;
        background-color: theme('colors.light.bg3');
    }

    /* Color variants */

    &.switch-success {
        --switch-color-active: theme('colors.success.500');
        --switch-color-rgb: var(--v-success-rgb);
    }

    &.switch-danger {
        --switch-color-active: theme('colors.danger.500');
        --switch-color-rgb: var(--v-danger-rgb);
    }

    &.switch-warning {
        --switch-color-active: theme('colors.warning.500');
        --switch-color-rgb: var(--v-warning-rgb);
    }
}

/* Improved active state animation */
.switch input:active ~ .control::after {
    --translation-x: var(--switch-handle-translation);
}

.switch input:not(:checked):active ~ .control::after {
    --translation-x: 0;
}

.modal-backdrop {
    position: fixed;
    visibility: hidden;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(17, 24, 39, 0.5);
    z-index: 11;

    &.show {
        visibility: visible;
    }
}

.drawer {
    position: fixed;
    display: flex;
    flex-direction: column;
    bottom: 0;
    left: 0;
    padding-bottom: var(--ion-safe-area-bottom, 0);
    width: 100%;
    max-height: 75vh;
    background-color: theme('colors.light.bg1');
    border-radius: 1rem 1rem 0 0;
    transform: translateY(100%);
    transition: transform 0.3s ease-in;
    overflow: hidden;
    z-index: 12;

    &.show {
        transform: translateY(0);
    }

    .drawer-handle {
        position: sticky;
        top: 0;
        width: 100%;
        display: flex;
        justify-content: center;
        padding: 1rem;
        background-color: theme('colors.light.bg1');
        z-index: 1;

        &::before {
            content: '';
            width: 64px;
            height: 6px;
            background-color: theme('colors.light.bdd');
            border-radius: 999px;
        }

    }

    .inner-scroll {
        flex: 1;
        overflow-y: auto;
        padding: 1rem;
        min-height: 50px;
    }
}

.toast-box {
    position: fixed;
    top: 3rem;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    transform: translateY(calc(-100% - 3rem));
    transition: transform 0.3s ease-in-out;
    z-index: 12;

    &.show {
        transform: translateY(0);
    }

    .toast-msg {
        display: inline-block;
        width: 248px;
        padding: 1rem;
        background: rgba(0, 0, 0, 0.6);
        border-radius: 0.5rem;
    }
}

.dialog-modal {
    background-color: theme('colors.light.bg1');
    border-radius: 1.2rem;
    padding: 1.2rem;
    box-shadow: theme('boxShadow.md');
    width: 90vw;
    text-align: center;

    & .modal-scrollable {
        max-height: 65vh;
        overflow-y: auto;
    }

    .icon-area {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 48px;
        height: 48px;
        margin: 0 auto;
        border-radius: 50%;
        border: 6px solid theme('colors.light.bdd');

        & .icon {
            width: 24px;
            height: 24px;

        }

        &.warning {
            background-color: theme('colors.warning.500');
            color: theme('colors.light.tx1');
            border-color: theme('colors.warning.300');
        }

        &.danger {
            background-color: theme('colors.danger.500');
            color: theme('colors.light.bg1');
            border-color: theme('colors.danger.300');
        }

        &.primary {
            background-color: theme('colors.primary.600');
            color: theme('colors.light.bg1');
            border-color: theme('colors.primary.300');
        }

        &.success {
            background-color: theme('colors.success.500');
            color: theme('colors.light.bg1');
            border-color: theme('colors.success.300');
        }
    }
}

.segment-wrapper {
    --underline-width: 0;
    --underline-left: 0;
    width: 100%;
    min-height: 240px;

    & > .segment-tabs {
        display: flex;
        position: relative;
        border-bottom: 2px solid theme('colors.light.bd3');
        margin-bottom: 0.5rem;

        &::after {
            content: '';
            position: absolute;
            bottom: -3px;
            height: 4px;
            border-radius: 99px;
            width: var(--underline-width, 0);
            background-color: theme('colors.primary.600');
            left: var(--underline-left, 0);
            transition: left 0.3s ease;
        }

        & .segment-tab {
            flex: 1;
            padding: 0.5rem 1rem;
            text-align: center;
            cursor: pointer;
            transition: color 0.15s ease;
            color: theme('colors.light.tx3');

            &.active {
                font-weight: theme('fontWeight.bold');
                color: theme('colors.primary.600');
            }
        }
    }

    & > .segment-panels {
        position: relative;

        & .segment-panel {
            display: none;
            position: absolute;
            width: 100%;
            opacity: 0;

            &.active {
                display: block;
                position: relative;
                opacity: 1;
                transition: opacity 0.3s ease;
            }

        }
    }
}

/* Custom scrollbar styles */
.scroll-thin {
    overflow-y: scroll;
    scrollbar-gutter: stable;
    scrollbar-width: thin;
    scrollbar-color: theme('colors.light.tx4') theme('colors.light.bg2');

    &::-webkit-scrollbar {
        width: 8px;
        height: 8px;
        display: block;
    }

    &::-webkit-scrollbar-thumb {
        background-color: theme('colors.light.tx4');
        border-radius: 8px;
    }

    &::-webkit-scrollbar-track {
        background-color: theme('colors.light.bg2');
        border-radius: 8px;
    }
}
